Copyright (C) 2018-2024 John Cage.

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation; with the
Invariant Sections being ``GNU General Public License'', with the
Front-Cover Texts being ``A GNU Manual'', and with the Back-Cover Texts
as in (a) below.  A copy of the license is included in the section
entitled ``GNU Free Documentation License''.

(a) The FSF's Back-Cover Text is: ``You have the freedom to
copy and modify this GNU manual.  Buying copies from the FSF
supports it in developing GNU and promoting software freedom.''

This file is used to trace bugs:
09-24-2018:
	Red-black tree has been cut off instead of an AA-tree. No apparent bugs. B-plus tree may hide bugs. B-plus tree is too big to invite bugs.
10-14-2018:
	Renaming existed functions in a published library is not a good conduct. I am sorry for the inconvenience that may caused by inconsistent naming. But I rather to eliminate those eyesores in function names.
02-01-2018:
	Some programs in directory ./Examples can't be compiled because of compilers behaved differently that triggered failures during crossing platforms.
05-12-2019:
	Bugs may hide in function grpShortestPathL and grpMinimalSpanningTreeL at file svgraph.h.
02-25-2023:
	2 bugs.
	1) _treFreeTrieNode at file svstree.c. Double free.
	2) strM3Matrix at file svmatrix.c. Wrong answer. Addressing issue.
	Fixed.
07-31-2023:
	1 bug.
	1) grpShortestPathL can not produce correct answer.
11-10-2023:
	1 bug:
	Code:
	#include "svtree.h"
	int main()
	{
		size_t i;
		P_BST p;

		p = treCreateBST();

		i = 1; *p = treBSTInsertAA(*p, &i, sizeof(size_t), _grpCBFCompareInteger);
		i = 2; *p = treBSTInsertAA(*p, &i, sizeof(size_t), _grpCBFCompareInteger);
		i = 3; *p = treBSTInsertAA(*p, &i, sizeof(size_t), _grpCBFCompareInteger);

		i = 2;

		*p = treBSTRemoveAA(*p, &i, sizeof(size_t), _grpCBFCompareInteger);
		/* Wrong answer goes here. */

		treDeleteBST(p);

		return 0;
	}
	Users should use AVL tree instead of AA tree.
	Fixed.
